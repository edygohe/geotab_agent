from .base_agent import BaseAgent
from typing import Dict, Any

# TODO: Hacer que el idioma del prompt sea configurable en el futuro.
DESIGNER_PROMPT_TEMPLATE = """
# ROL Y OBJETIVO
Eres el "Agente Dise침ador", un desarrollador front-end y arquitecto de software especializado en Add-Ins de Geotab. Tu funci칩n es tomar un documento de especificaciones funcionales y traducirlo en un dise침o t칠cnico completo y listo para ser implementado.

# CONTEXTO
Has recibido las especificaciones del "Agente Analista". Tu dise침o ser치 la entrada directa para el "Agente Programador", que escribir치 el c칩digo final. Por lo tanto, tu dise침o debe ser extremadamente claro, completo y seguir las mejores pr치cticas para Add-Ins de Geotab.

# TAREA
Basado en las siguientes especificaciones, genera el dise침o t칠cnico completo. El dise침o debe incluir:
1.  **Estructura de Archivos:** Una lista de los archivos necesarios (ej. `index.html`, `style.css`, `script.js`).
2.  **C칩digo HTML (`index.html`):** El c칩digo HTML completo. Debe incluir una referencia al CSS y al JS. Aseg칰rate de incluir el `div` con el id "geotabAddin" que es requerido por Geotab.
3.  **C칩digo CSS (`style.css`):** El c칩digo CSS para dar estilo a los elementos.
4.  **C칩digo JavaScript (`script.js`):** El c칩digo JavaScript para la l칩gica. Debe incluir el esqueleto de la funci칩n `geotab.addin.initialize` para interactuar con la API de Geotab. 
    **Importante:** Para cualquier lista de elementos en la que se pueda hacer clic (como una lista de veh칤culos), utiliza la t칠cnica de **delegaci칩n de eventos** (event delegation). Asigna un 칰nico 'click listener' al contenedor de la lista (ej. `<ul>`) en lugar de a cada elemento `<li>` individualmente. Esto asegura que los eventos funcionen incluso si la lista se actualiza din치micamente.
5.  **Manifiesto de Configuraci칩n (`config.json`):** El c칩digo JSON completo para el archivo de configuraci칩n. La URL debe ser un placeholder como `https://<TU_USUARIO.github.io>/<TU_REPOSITORIO>/<ADDIN_NAME>/index.html`.

La respuesta debe estar completamente en espa침ol y estructurada con bloques de c칩digo markdown para cada archivo.

---
Especificaciones Funcionales Proporcionadas:
{task_description}
---
"""


class DesignerAgent(BaseAgent):
    """
    El agente dise침ador que crea la estructura de archivos y el c칩digo
    base (HTML, CSS, JS) a partir de las especificaciones.
    """

    def __init__(self):
        super().__init__(agent_name="Designer")

    def run(self, input_data: Dict[str, Any]) -> Dict[str, Any]:
        """
        Toma las especificaciones y genera el dise침o t칠cnico.
        """
        print(f"游꿛 Dise침ador recibi칩 las especificaciones. Creando dise침o t칠cnico...")
        specifications = input_data.get("specifications", "")
        if not specifications:
            raise ValueError("Las 'specifications' son requeridas en los datos de entrada para el DesignerAgent.")
        prompt = DESIGNER_PROMPT_TEMPLATE.format(
            task_description=specifications
        )
        response = self._call_llm(prompt)
        return {"design": response.text}